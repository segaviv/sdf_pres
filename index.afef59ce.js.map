{"mappings":"CAkBI,WAIH,IAFA,IAAIA,EAAWC,SAASC,iBAAkB,mBAEjCC,EAAI,EAAGC,EAAMJ,EAASK,OAAQF,EAAIC,EAAKD,IAAM,CAElD,IAAIG,EAAeN,EAASG,GAE5B,GAAIG,EAAaC,aAAc,iBAAkBF,OAAS,CAE7D,IAAIG,EAAM,IAAIC,eACdC,EAAMJ,EAAaC,aAAc,iBAGjCC,EAAIG,mBAAqB,WACE,IAAnBH,EAAII,aAENJ,EAAMK,QAAU,KAAOL,EAAIK,OAAS,KAAwB,IAAfL,EAAIK,OAElDP,EAAaQ,UAAYN,EAAIO,aAM7BT,EAAaQ,UAAY,2DACKJ,EAAM,4BAA8BF,EAAIK,OAD7C,uJ,EAU9BL,EAAIQ,KAAM,MAAON,GAAK,GAEtB,IACIF,EAAIS,M,CAER,MAAQC,GACJC,MAAO,0BAA4BT,EAAM,+GAAiHQ,E,IA3C5JE","sources":["plugin/external.js"],"sourcesContent":["/*\n * external.js\n * Cal Evans <cal@calevans.com>\n * (c) Evans Internet Construction Company, Inc.\n * Released under the MIT license\n * Load external files into a reveal.js presentation.\n * \n * This is a reveal.js plugin to load external html files. It replaces the \n * content of any element with a data-external=\"file.ext\" with the contents \n * of file.ext.\n *\n * This started life as markdown.js. Thank you to whomever wrote it.\n * Small mods by JJ Merelo, github.com/JJ\n */\n\n(function(){\n    loadExternal();\n    \n    function loadExternal() {\n\t\n\tvar sections = document.querySelectorAll( '[data-external]');\n\t\n\tfor( var i = 0, len = sections.length; i < len; i++ ) {\n\t    \n\t    var this_section = sections[i];\n\t    \n\t    if( this_section.getAttribute( 'data-external' ).length ) {\n\t\t\n\t\tvar xhr = new XMLHttpRequest(),\n\t\turl = this_section.getAttribute( 'data-external' );\n\t\t\n\t\t// see https://developer.mozilla.org/en-US/docs/Web/API/element.getAttribute#Notes\n\t\txhr.onreadystatechange = function() {\n\t\t    if( xhr.readyState === 4 ) {\n\t\t\t// file protocol yields status code 0 (useful for local debug, mobile applications etc.)\n\t\t\tif ( ( xhr.status >= 200 && xhr.status < 300 ) || xhr.status === 0 ) {\n\t\t\t    \n\t\t\t    this_section.innerHTML = xhr.responseText;\n\t\t\t    \n\t\t\t    \n\t\t\t}\n\t\t\telse {\n\t\t\t    \n\t\t\t    this_section.innerHTML = '<section data-state=\"alert\">' +\n\t\t\t\t'ERROR: The attempt to fetch ' + url + ' failed with HTTP status ' + xhr.status + '.' +\n\t\t\t\t'Check your browser\\'s JavaScript console for more details.' +\n\t\t\t\t'<p>Remember that you need to serve the presentation HTML from a HTTP server.</p>' +\n\t\t\t\t'</section>';\n\t\t\t    \n\t\t\t}\n\t\t    }\n\t\t};\n\t\t\n\t\txhr.open( 'GET', url, false );\n\t\t\n\t\ttry {\n\t\t    xhr.send();\n\t\t}\n\t\tcatch ( e ) {\n\t\t    alert( 'Failed to get the file ' + url + '. Make sure that the presentation and the file are served by a HTTP server and the file can be found there. ' + e );\n\t\t}\n\t\t\n\t    }\n\t    \n\t}\n\t\n\treturn;\t\n    }\n    \n})();\n"],"names":["sections","document","querySelectorAll","i","len","length","this_section","getAttribute","xhr","XMLHttpRequest","url","onreadystatechange","readyState","status","innerHTML","responseText","open","send","e","alert","loadExternal"],"version":3,"file":"index.afef59ce.js.map"}